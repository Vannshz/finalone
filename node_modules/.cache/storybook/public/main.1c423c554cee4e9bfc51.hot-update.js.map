{"version":3,"file":"main.1c423c554cee4e9bfc51.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AADA;AAAA;AAIA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAeA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAXA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAAA;AAAA;AAAA;AAAA;AA+CA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAuEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAlFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AA2FA;;AAnJA;AAgBA;;;AAhBA;AAqJA","sources":["webpack://new-blinkist/./src/components/organisms/BookDescription/BookDescription.tsx"],"sourcesContent":["import { styled } from \"@mui/styles\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Box } from \"@mui/material\";\nimport Typography from \"../../atoms/typography/Typography\";\nimport IconWithTypography from \"../../molecules/IconTypography/IconTypography\";\nimport { ReactComponent as Time } from \"../../../images/time.svg\";\nimport BeyondEntrepreneur from \"../../../images/coverImages/beyondEntrepreneurship.svg\";\nimport AddButton from \"../../molecules/Buttons/Buttons\";\nimport { ReactComponent as Side } from \"../../../images/side.svg\";\nimport BookTab from \"../../organisms/AboutBook/AboutBook\";\nimport api from \"../../../api/api\";\nimport Constants from \"../../../data/Constants\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport type DataObject = {\n  id: number;\n  title: string;\n  author: string;\n  image: string;\n  time: string;\n  read: string;\n  state: {\n    isFinished: boolean;\n    isTrending: boolean;\n    justAdded: boolean;\n    isFeatured: boolean;\n  };\n};\n\nconst LeftSection = styled(\"div\")({\n  height: \"100px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"24px\",\n});\n\nconst LeftBottom = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"row\",\n  marginTop: \"45px\",\n  gap: \"30px\",\n});\n\nconst WrapStyled = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst BottomTab = styled(\"div\")({\n  marginTop: \"60px\",\n});\n\nconst RightSection = styled(\"div\")({\n  height: \"100px\",\n  marginTop: \"50px\",\n});\n\nconst BookDescription = () => {\n  const [bookData, setBookData] = useState<DataObject>({\n    id: 1,\n    title: \"\",\n    author: \"\",\n    image: \"\",\n    time: \"\",\n    read: \"\",\n    state: {\n      isFinished: false,\n      isTrending: false,\n      isFeatured: false,\n      justAdded: false,\n    },\n  });\n\n  const navigate = useNavigate();\n\n  const [buttonHover, setButtonHover] = useState(false);\n\n  const handleMouseEnter = () => {\n    setButtonHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setButtonHover(false);\n  };\n\n  const handleFinish = async (num: number) => {\n    bookData.state.isFinished = true;\n    await api.put(`/library/${num}`, bookData);\n    navigate(\"/\")\n  };\n\n  const handleRead = async (num: number) => {\n   \n    // await api.put(`/library/${num}`, bookData);\n    navigate(\"/\")\n  }\n\n  const getData = async () => {\n    const response = await api.get(`/library/${10}`);\n    const mydata = response.data;\n    setBookData(mydata);\n  };\n\n  useEffect(() => {\n   getData()\n  }, [bookData.state.isFinished]);\n\n  let hoverStyle;\n  if (buttonHover) {\n    hoverStyle = { backgroundColor: \"#00C263\" };\n  }\n\n  return (\n    <>\n      <Container sx={{ marginTop: \"30px\" }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: \"912px\",\n            height: \"660px\",\n            margin: \"0 auto\",\n            borderBottom: \"1px solid #E1ECFC\",\n          }}\n        >\n          <LeftSection>\n            <Typography variant=\"body2\">\n              {Constants.bookDetails.title}\n            </Typography>\n            <Typography variant=\"h1\">\n              {Constants.bookDetails.heading}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              {Constants.bookDetails.description}\n            </Typography>\n            <Typography variant=\"body1\">\n              {Constants.bookDetails.author}\n            </Typography>\n            <IconWithTypography\n              iconSrc={<Time />}\n              variant=\"caption\"\n              title=\"15-minute read\"\n            />\n            <WrapStyled>\n              <LeftBottom>\n                <AddButton\n                  style={{\n                    width: \"122px\",\n                    height: \"44px\",\n                    color: \"#22C870\",\n                    border: \"1px solid black\",\n                    textTransform: \"none\",\n                  }}\n                  onClick={() => handleRead(10)}\n                >\n                  <Typography variant=\"body1\">\n                    {Constants.bookDetails.buttons.read}\n                  </Typography>\n                </AddButton>\n                <AddButton\n                  style={{\n                    width: \"170px\",\n                    height: \"44px\",\n                    backgroundColor: \"#2CE080\",\n                    color: \"black\",\n                    textTransform: \"none\",\n                    ...hoverStyle,\n                  }}\n                  onClick={() => handleFinish(10)}\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}\n                >\n                  <Typography variant=\"body1\">\n                    {Constants.bookDetails.buttons.finish}\n                  </Typography>\n                </AddButton>\n                <AddButton\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    gap: \"11px\",\n                    color: \"#6D787E\",\n                    textTransform: \"none\",\n                  }}\n                >\n                  <Typography variant=\"body1\">\n                    {Constants.bookDetails.buttons.send}\n                  </Typography>\n                  <Side />\n                </AddButton>\n              </LeftBottom>\n              <BottomTab>\n                <BookTab />\n              </BottomTab>\n            </WrapStyled>\n          </LeftSection>\n          <RightSection>\n            <img src={BeyondEntrepreneur} alt=\"\" />\n          </RightSection>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default BookDescription;\n"],"names":[],"sourceRoot":""}