{"ast":null,"code":"var _jsxFileName = \"/home/vannsn/Documents/Blinkist-Application-master/src/components/molecules/Buttons/Buttons.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = props => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: props.variant,\n    color: props.color,\n    disabled: props.disabled,\n    size: props.size,\n    className: classes.connectButton,\n    href: props.href,\n    style: props.style,\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Buttons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/home/vannsn/Documents/Blinkist-Application-master/src/components/molecules/Buttons/Buttons.tsx"],"names":["React","Button","Buttons","props","classes","useStyles","variant","color","disabled","size","connectButton","href","style","onClick","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAqCA,MAAMC,OAAO,GAAIC,KAAD,IAAkB;AAAA;;AAChC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACG,OADjB;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACI,KAFf;AAGE,IAAA,QAAQ,EAAEJ,KAAK,CAACK,QAHlB;AAIE,IAAA,IAAI,EAAEL,KAAK,CAACM,IAJd;AAKE,IAAA,SAAS,EAAEL,OAAO,CAACM,aALrB;AAME,IAAA,IAAI,EAAEP,KAAK,CAACQ,IANd;AAOE,IAAA,KAAK,EAAER,KAAK,CAACS,KAPf;AAQE,IAAA,OAAO,EAAET,KAAK,CAACU,OARjB;AAAA,cAUGV,KAAK,CAACW;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;GAAMZ,O;;KAAAA,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\n\n// const useStyles = makeStyles({\n//   connectButton: {\n//     width: \"296px\",\n//     height: \"44px\",\n//     backgroundColor: \"rgba(44, 224, 128, 1)\",\n//     borderRadius: 0,\n//     border: \"none\",\n//     \"&:hover\": {\n//       backgroundColor: \"rgba(0, 194, 99, 1)\",\n//     },\n//   },\n// });\n\ninterface Props {\n  color?:\n    | \"inherit\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"error\"\n    | \"info\"\n    | \"warning\";\n  disabled?: boolean;\n  href?: string;\n  size?: \"small\" | \"medium\" | \"large\";\n  variant?: \"contained\" | \"outlined\" | \"text\";\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nconst Buttons = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant={props.variant}\n      color={props.color}\n      disabled={props.disabled}\n      size={props.size}\n      className={classes.connectButton}\n      href={props.href}\n      style={props.style}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </Button>\n  );\n};\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}