{"ast":null,"code":"var _jsxFileName = \"/home/vannsn/Documents/Blinkist-Application-master/src/components/organisms/ExtendedNav/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createTheme, ThemeProvider, Box, Container } from \"@mui/material\";\nimport { makeStyles, styled } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport Typography from \"../../atoms/typography/Typography\";\nimport NavData from \"../../../data/ExtendedNavData\";\nimport IconWithTypography from \"../../molecules/IconTypography/IconTypography\";\nimport { useState, useEffect } from \"react\"; // import theme from '../../theme/theme';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiTypography: {\n      styleOverrides: {\n        body1: {\n          fontFamily: \"Cera Pro\",\n          fontWeight: \"500\",\n          fontSize: \"16px\",\n          lineHeight: \"20px\"\n        }\n      }\n    }\n  }\n});\nconst useStyles = makeStyles({\n  div1: {\n    boxSizing: \"border-box\",\n    minWidth: \"100%\",\n    height: \"398px\",\n    backgroundColor: \"#F1F6F4\",\n    margin: \"0 auto\",\n    position: \"absolute\",\n    zIndex: \"2\",\n    overflowX: \"hidden\",\n    left: \"0px\"\n  },\n  box1: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    gap: \"150px\",\n    position: \"relative\",\n    top: \"30px\",\n    paddingBottom: \"24px\",\n    borderBottom: \"1px solid black\",\n    width: \"900px\",\n    margin: \"0 auto\"\n  },\n  tab1: {\n    color: \"#116BE9\"\n  },\n  navItems: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"900px\",\n    top: \"40px\",\n    position: \"relative\",\n    gap: \" 16px 140px\",\n    justifyContent: \"flex-start\",\n    alignContent: \"flexStart\",\n    margin: \"0 auto\"\n  },\n  items: {\n    width: \"182px\"\n  },\n  hover: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"#116BE9\"\n    }\n  }\n});\nconst WrapStyled = styled(\"div\")({\n  height: \"100%\",\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  backgroundColor: \"rgba(157, 163, 166, 0.45)\",\n  position: \"absolute\",\n  zIndex: \"1\",\n  margin: \"0 auto\",\n  left: \"0px\"\n});\n_c = WrapStyled;\n\nconst ExtendedNav = () => {\n  _s();\n\n  const [wrapStyle, setWrapStyle] = useState({\n    width: document.body.clientWidth,\n    height: document.body.clientHeight\n  });\n  useEffect(() => {\n    setWrapStyle({\n      width: document.body.clientWidth,\n      height: document.body.clientHeight\n    });\n  }, []);\n  const style = useStyles();\n  const navigate = useNavigate();\n\n  const showEnterprenuerList = () => {\n    navigate(\"/entrepreneur\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(WrapStyled, {\n      style: wrapStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.div1,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: style.box1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: style.tab1,\n              children: \"Explore by category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"See recently added titles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"See popular titles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: style.navItems,\n            children: NavData.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.items,\n                children: /*#__PURE__*/_jsxDEV(IconWithTypography, {\n                  iconSrc: data.icon,\n                  title: data.title,\n                  variant: \"body2\",\n                  className: style.hover,\n                  onClick: showEnterprenuerList\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExtendedNav, \"87S4odeTNIhK8OQGoqFqhZ9aleM=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c2 = ExtendedNav;\nexport default ExtendedNav;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WrapStyled\");\n$RefreshReg$(_c2, \"ExtendedNav\");","map":{"version":3,"sources":["/home/vannsn/Documents/Blinkist-Application-master/src/components/organisms/ExtendedNav/index.tsx"],"names":["createTheme","ThemeProvider","Box","Container","makeStyles","styled","useNavigate","Typography","NavData","IconWithTypography","useState","useEffect","theme","components","MuiTypography","styleOverrides","body1","fontFamily","fontWeight","fontSize","lineHeight","useStyles","div1","boxSizing","minWidth","height","backgroundColor","margin","position","zIndex","overflowX","left","box1","display","flexDirection","justifyContent","gap","top","paddingBottom","borderBottom","width","tab1","color","navItems","flexWrap","alignContent","items","hover","cursor","WrapStyled","ExtendedNav","wrapStyle","setWrapStyle","document","body","clientWidth","clientHeight","style","navigate","showEnterprenuerList","map","data","index","icon","title"],"mappings":"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","sourcesContent":["import { createTheme, ThemeProvider, Box, Container } from \"@mui/material\";\nimport { makeStyles, styled } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport Typography from \"../../atoms/typography/Typography\";\nimport NavData from \"../../../data/ExtendedNavData\";\nimport IconWithTypography from \"../../molecules/IconTypography/IconTypography\";\nimport { useState, useEffect } from \"react\";\n// import theme from '../../theme/theme';\n\nconst theme = createTheme({\n  components: {\n    MuiTypography: {\n      styleOverrides: {\n        body1: {\n          fontFamily: \"Cera Pro\",\n          fontWeight: \"500\",\n          fontSize: \"16px\",\n          lineHeight: \"20px\",\n        },\n      },\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  div1: {\n    boxSizing: \"border-box\",\n    minWidth: \"100%\",\n    height: \"398px\",\n    backgroundColor: \"#F1F6F4\",\n    margin: \"0 auto\",\n    position: \"absolute\",\n    zIndex: \"2\",\n    overflowX: \"hidden\",\n    left: \"0px\",\n  },\n  box1: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    gap: \"150px\",\n    position: \"relative\",\n    top: \"30px\",\n    paddingBottom: \"24px\",\n    borderBottom: \"1px solid black\",\n    width: \"900px\",\n    margin: \"0 auto\",\n  },\n  tab1: {\n    color: \"#116BE9\",\n  },\n  navItems: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"900px\",\n    top: \"40px\",\n    position: \"relative\",\n    gap: \" 16px 140px\",\n    justifyContent: \"flex-start\",\n    alignContent: \"flexStart\",\n    margin: \"0 auto\",\n  },\n  items: {\n    width: \"182px\",\n  },\n  hover: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"#116BE9\",\n    },\n  },\n});\n\nconst WrapStyled = styled(\"div\")({\n  height: \"100%\",\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  backgroundColor: \"rgba(157, 163, 166, 0.45)\",\n  position: \"absolute\",\n  zIndex: \"1\",\n  margin: \"0 auto\",\n  left: \"0px\",\n});\n\nconst ExtendedNav = () => {\n  const [wrapStyle, setWrapStyle] = useState({\n    width: document.body.clientWidth,\n    height: document.body.clientHeight,\n  });\n\n  useEffect(() => {\n    setWrapStyle({\n      width: document.body.clientWidth,\n      height: document.body.clientHeight,\n    });\n  }, []);\n\n  const style = useStyles();\n\n  const navigate = useNavigate();\n\n  const showEnterprenuerList = () => {\n    navigate(\"/entrepreneur\");\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <WrapStyled style={wrapStyle}>\n        <div className={style.div1}>\n          <Container>\n            <Box className={style.box1}>\n              <Typography variant=\"body1\" className={style.tab1}>\n                Explore by category\n              </Typography>\n              <Typography variant=\"body1\">See recently added titles</Typography>\n              <Typography variant=\"body1\">See popular titles</Typography>\n            </Box>\n            <Box className={style.navItems}>\n              {NavData.map((data, index) => {\n                return (\n                  <div className={style.items}>\n                    <IconWithTypography\n                      key={index}\n                      iconSrc={data.icon}\n                      title={data.title}\n                      variant=\"body2\"\n                      className={style.hover}\n                      onClick={showEnterprenuerList}\n                    />\n                  </div>\n                );\n              })}\n            </Box>\n          </Container>\n        </div>\n      </WrapStyled>\n    </ThemeProvider>\n  );\n};\n\nexport default ExtendedNav;\n"]},"metadata":{},"sourceType":"module"}