{"ast":null,"code":"import React from\"react\";import Button from\"@mui/material/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";var Buttons=function Buttons(props){//  const classes = useStyles();\nreturn/*#__PURE__*/_jsx(Button,{variant:props.variant,color:props.color,disabled:props.disabled,size:props.size// className={classes.connectButton}\n,href:props.href,style:props.style,onClick:props.onClick,children:props.children});};export default Buttons;","map":{"version":3,"sources":["/home/vannsn/Documents/Blinkist-Application-master/src/components/molecules/Buttons/Buttons.tsx"],"names":["React","Button","Buttons","props","variant","color","disabled","size","href","style","onClick","children"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,2CAqCA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAkB,CAClC;AACE,mBACE,KAAC,MAAD,EACE,OAAO,CAAEA,KAAK,CAACC,OADjB,CAEE,KAAK,CAAED,KAAK,CAACE,KAFf,CAGE,QAAQ,CAAEF,KAAK,CAACG,QAHlB,CAIE,IAAI,CAAEH,KAAK,CAACI,IACb;AALD,CAME,IAAI,CAAEJ,KAAK,CAACK,IANd,CAOE,KAAK,CAAEL,KAAK,CAACM,KAPf,CAQE,OAAO,CAAEN,KAAK,CAACO,OARjB,UAUGP,KAAK,CAACQ,QAVT,EADF,CAcD,CAhBD,CAkBA,cAAeT,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\n\n// const useStyles = makeStyles({\n//   connectButton: {\n//     width: \"296px\",\n//     height: \"44px\",\n//     backgroundColor: \"rgba(44, 224, 128, 1)\",\n//     borderRadius: 0,\n//     border: \"none\",\n//     \"&:hover\": {\n//       backgroundColor: \"rgba(0, 194, 99, 1)\",\n//     },\n//   },\n// });\n\ninterface Props {\n  color?:\n    | \"inherit\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"error\"\n    | \"info\"\n    | \"warning\";\n  disabled?: boolean;\n  href?: string;\n  size?: \"small\" | \"medium\" | \"large\";\n  variant?: \"contained\" | \"outlined\" | \"text\";\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nconst Buttons = (props: Props) => {\n//  const classes = useStyles();\n  return (\n    <Button\n      variant={props.variant}\n      color={props.color}\n      disabled={props.disabled}\n      size={props.size}\n     // className={classes.connectButton}\n      href={props.href}\n      style={props.style}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </Button>\n  );\n};\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}