{"ast":null,"code":"var _jsxFileName = \"/home/vannsn/Documents/Blinkist-Application-master/src/components/organisms/Card/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport Typography from \"../../atoms/typography/Typography\";\nimport IconTypography from \"../../molecules/IconTypography/IconTypography\";\nimport Button from \"../../molecules/Buttons/Buttons\";\nimport { ReactComponent as Time } from \"../../../images/time.svg\";\nimport { ReactComponent as User } from \"../../../images/user.svg\";\nimport { ReactComponent as Add } from \"../../../images/add.svg\";\nimport api from \"../../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiTypography: {\n      styleOverrides: {\n        subtitle1: {\n          fontFamily: \"Cera Pro\",\n          fontlWeight: \"bold\",\n          fontSize: \"18px\",\n          lineHeight: \"23px\",\n          color: \"#03314B\"\n        },\n        body1: {\n          fontFamily: \"Cera Pro\",\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fontSize: \"16px\",\n          lineHeight: \"20px\"\n        },\n        caption: {\n          fontFamily: \"Cera Pro\",\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fontSize: \"14px\",\n          lineHeight: \"18px\",\n          color: \"#6D787E\"\n        }\n      }\n    }\n  }\n});\nconst RootContainer = styled(\"div\")({\n  width: \"284px\",\n  height: \"466px\",\n  background: \"#FFFFFF\",\n  border: \"1px solid #E1ECFC\",\n  boxSizing: \"border-box\",\n  borderRadius: \"8px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"12px\",\n  overflow: \"hidden\"\n});\n_c = RootContainer;\nconst useStyles = makeStyles({\n  image: {\n    position: \"relative\",\n    height: \"292px\",\n    width: \"294.1px\"\n  },\n  title: {\n    position: \"relative\",\n    top: \"23px\",\n    left: \"16px\",\n    bottom: \"80px\",\n    height: \"23px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"18px\",\n    lineHeight: \"23px\",\n    color: \"#03314B\"\n  },\n  author: {\n    position: \"relative\",\n    top: \"16px\",\n    left: \"16px\",\n    height: \"20px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    color: \"#6D787E\"\n  },\n  rowFlex: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    top: \"17px\"\n  },\n  time: {\n    position: \"relative\",\n    left: \"5px\",\n    top: \"16px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"14px\",\n    lineHeight: \"18px\",\n    color: \"#6D787E\"\n  },\n  read: {\n    position: \"relative\",\n    top: \"16px\",\n    left: \"47.33px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"14px\",\n    lineHeight: \"18px\",\n    textAlign: \"right\",\n    color: \"#6D787E\"\n  },\n  finished: {\n    fontFamily: \"Cera Pro\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    color: \"#0365F2\",\n    textAlign: \"center\",\n    position: \"relative\",\n    top: \"15px\",\n    cursor: \"pointer\"\n  },\n  addButton: {\n    width: \"100%\",\n    height: \"52px\"\n  }\n});\n\nconst Card = props => {\n  _s();\n\n  const [mouseState, setMouseState] = useState(false);\n  const [linkStyle, setLinkStyle] = useState({});\n  const [iconStyle, setIconStyle] = useState({});\n  const [bookData, setBookData] = useState({\n    id: 1,\n    title: \"\",\n    author: \"\",\n    image: \"\",\n    time: \"\",\n    read: \"\",\n    state: {\n      isFinished: false,\n      isTrending: false,\n      isFeatured: false,\n      justAdded: false\n    }\n  });\n\n  const handleMouseEnter = () => {\n    setMouseState(true);\n    setLinkStyle({\n      backgroundColor: \"#0365F2\",\n      color: \"white\"\n    });\n    setIconStyle({\n      fill: \"white\",\n      stroke: \"white\"\n    });\n  };\n\n  const handleMouseLeave = () => {\n    setMouseState(false);\n    setLinkStyle({\n      backgroundColor: \"#FFFFFF\"\n    });\n    setIconStyle({});\n  };\n\n  const addToCurrentlyReading = async () => {\n    bookData.state.isFinished = false;\n    bookData.state.isTrending = false;\n    await api.put(`/library/${10}`, bookData);\n  };\n\n  const updateFinish = async num => {\n    if (bookData.state.isFinished) {\n      bookData.state.isFinished = false;\n    } else {\n      bookData.state.isFinished = true;\n    }\n\n    await api.put(`/library/${num}`, bookData);\n  };\n\n  useEffect(() => {\n    const getData = async val => {\n      const response = await api.get(`/library/${val}`);\n      const mydata = response.data;\n      setBookData(mydata);\n    };\n\n    return () => {\n      getData(props.value);\n    };\n  }, [bookData, props.value]);\n  const style = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(RootContainer, {\n        onClick: props.onClick,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image,\n          alt: \"img\",\n          className: style.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: style.title,\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          className: style.author,\n          children: props.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.rowFlex,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.time,\n            children: /*#__PURE__*/_jsxDEV(IconTypography, {\n              iconSrc: /*#__PURE__*/_jsxDEV(Time, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 26\n              }, this),\n              variant: \"caption\",\n              title: props.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.read,\n            children: props.read === \"\" ? null : /*#__PURE__*/_jsxDEV(IconTypography, {\n              iconSrc: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 28\n              }, this),\n              variant: \"caption\",\n              title: props.read\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), props.isFinished ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          className: style.finished,\n          onClick: () => updateFinish(props.value),\n          children: \"Finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this) : null, props.readAgain ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          className: style.finished,\n          onClick: () => updateFinish(props.value),\n          children: \"Read Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : null, props.addToLibrary ? /*#__PURE__*/_jsxDEV(Button, {\n          style: linkStyle,\n          className: style.addButton,\n          onMouseEnter: () => handleMouseEnter,\n          onMouseLeave: () => handleMouseLeave,\n          onClick: () => addToCurrentlyReading,\n          children: /*#__PURE__*/_jsxDEV(IconTypography, {\n            iconSrc: /*#__PURE__*/_jsxDEV(Add, {\n              style: iconStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 26\n            }, this),\n            variant: \"body1\",\n            title: \"Add to library\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"E9KEsyvC5GkxVixoHInYeMY8ZGI=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Card;\nexport default Card;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RootContainer\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/vannsn/Documents/Blinkist-Application-master/src/components/organisms/Card/Card.tsx"],"names":["React","useState","useEffect","makeStyles","createTheme","ThemeProvider","styled","Typography","IconTypography","Button","ReactComponent","Time","User","Add","api","theme","components","MuiTypography","styleOverrides","subtitle1","fontFamily","fontlWeight","fontSize","lineHeight","color","body1","fontStyle","fontWeight","caption","RootContainer","width","height","background","border","boxSizing","borderRadius","display","flexDirection","gap","overflow","useStyles","image","position","title","top","left","bottom","author","rowFlex","time","read","textAlign","finished","cursor","addButton","Card","props","mouseState","setMouseState","linkStyle","setLinkStyle","iconStyle","setIconStyle","bookData","setBookData","id","state","isFinished","isTrending","isFeatured","justAdded","handleMouseEnter","backgroundColor","fill","stroke","handleMouseLeave","addToCurrentlyReading","put","updateFinish","num","getData","val","response","get","mydata","data","value","style","onClick","readAgain","addToLibrary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport Typography from \"../../atoms/typography/Typography\";\nimport IconTypography from \"../../molecules/IconTypography/IconTypography\";\nimport Button from \"../../molecules/Buttons/Buttons\";\nimport { ReactComponent as Time } from \"../../../images/time.svg\";\nimport { ReactComponent as User } from \"../../../images/user.svg\";\nimport { ReactComponent as Add } from \"../../../images/add.svg\";\nimport api from \"../../../api/api\";\nimport { DataObject } from \"../BookDescription/BookDescription\";\n\nconst theme = createTheme({\n  components: {\n    MuiTypography: {\n      styleOverrides: {\n        subtitle1: {\n          fontFamily: \"Cera Pro\",\n          fontlWeight: \"bold\",\n          fontSize: \"18px\",\n          lineHeight: \"23px\",\n          color: \"#03314B\",\n        },\n        body1: {\n          fontFamily: \"Cera Pro\",\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fontSize: \"16px\",\n          lineHeight: \"20px\",\n        },\n        caption: {\n          fontFamily: \"Cera Pro\",\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fontSize: \"14px\",\n          lineHeight: \"18px\",\n          color: \"#6D787E\",\n        },\n      },\n    },\n  },\n});\n\nconst RootContainer = styled(\"div\")({\n  width: \"284px\",\n  height: \"466px\",\n  background: \"#FFFFFF\",\n  border: \"1px solid #E1ECFC\",\n  boxSizing: \"border-box\",\n  borderRadius: \"8px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"12px\",\n  overflow: \"hidden\",\n});\n\nconst useStyles = makeStyles({\n  image: {\n    position: \"relative\",\n    height: \"292px\",\n    width: \"294.1px\",\n  },\n  title: {\n    position: \"relative\",\n    top: \"23px\",\n    left: \"16px\",\n    bottom: \"80px\",\n    height: \"23px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"18px\",\n    lineHeight: \"23px\",\n    color: \"#03314B\",\n  },\n  author: {\n    position: \"relative\",\n    top: \"16px\",\n    left: \"16px\",\n    height: \"20px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    color: \"#6D787E\",\n  },\n  rowFlex: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    top: \"17px\",\n  },\n  time: {\n    position: \"relative\",\n    left: \"5px\",\n    top: \"16px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"14px\",\n    lineHeight: \"18px\",\n    color: \"#6D787E\",\n  },\n  read: {\n    position: \"relative\",\n    top: \"16px\",\n    left: \"47.33px\",\n    fontFamily: \"Cera Pro\",\n    fontSize: \"14px\",\n    lineHeight: \"18px\",\n    textAlign: \"right\",\n    color: \"#6D787E\",\n  },\n  finished: {\n    fontFamily: \"Cera Pro\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    color: \"#0365F2\",\n    textAlign: \"center\",\n    position: \"relative\",\n    top: \"15px\",\n    cursor: \"pointer\",\n  },\n  addButton: {\n    width: \"100%\",\n    height: \"52px\",\n  },\n});\n\ninterface Props {\n  children?: React.ReactNode;\n  className?: string;\n  image?: string;\n  title: string;\n  author: string;\n  time: string;\n  read: string;\n    isFinished?: boolean;\n    addToLibrary?: boolean;\n    readAgain?: boolean;\n  onClick?: () => void;\n  value: number;\n  id?: number;\n} \n\nconst Card = (props: Props) => {\n  const [mouseState, setMouseState] = useState(false);\n  const [linkStyle, setLinkStyle] = useState({});\n  const [iconStyle, setIconStyle] = useState({});\n\n  const [bookData, setBookData] = useState<DataObject>({\n    id: 1,\n    title: \"\",\n    author: \"\",\n    image: \"\",\n    time: \"\",\n    read: \"\",\n    state: {\n      isFinished: false,\n      isTrending: false,\n      isFeatured: false,\n      justAdded: false,\n    },\n  });\n\n  const handleMouseEnter = () => {\n    setMouseState(true);\n    setLinkStyle({\n      backgroundColor: \"#0365F2\",\n      color: \"white\",\n    });\n\n    setIconStyle({\n      fill: \"white\",\n      stroke: \"white\",\n    });\n  };\n\n  const handleMouseLeave = () => {\n    setMouseState(false);\n    setLinkStyle({\n      backgroundColor: \"#FFFFFF\",\n    });\n    setIconStyle({});\n  };\n\n  const addToCurrentlyReading = async () => {\n    bookData.state.isFinished = false;\n    bookData.state.isTrending = false;\n    await api.put(`/library/${10}`, bookData);\n  }\n\n  const updateFinish = async (num: number) => {\n    if (bookData.state.isFinished) {\n      bookData.state.isFinished = false;\n    } else {\n      bookData.state.isFinished = true;\n    }\n    await api.put(`/library/${num}`, bookData);\n  };\n\n  useEffect(() => {\n    const getData = async (val: number) => {\n      const response = await api.get(`/library/${val}`);\n      const mydata = response.data;\n      setBookData(mydata);\n    };\n\n    return () => {\n      getData(props.value);\n    }\n  }, [bookData, props.value]);\n\n  const style = useStyles();\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <RootContainer onClick={props.onClick}>\n          <img src={props.image} alt=\"img\" className={style.image} />\n          <Typography variant=\"subtitle1\" className={style.title}>\n            {props.title}\n          </Typography>\n          <Typography variant=\"body1\" className={style.author}>\n            {props.author}\n          </Typography>\n          <div className={style.rowFlex}>\n            <div className={style.time}>\n              <IconTypography\n                iconSrc={<Time />}\n                variant=\"caption\"\n                title={props.time}\n              />\n            </div>\n            <div className={style.read}>\n              {props.read === \"\" ? null : (\n                <IconTypography\n                  iconSrc={<User />}\n                  variant=\"caption\"\n                  title={props.read}\n                />\n              )}\n            </div>\n          </div>\n\n          {props.isFinished ? (\n            <Typography variant=\"body1\" className={style.finished} onClick={() => updateFinish(props.value)}>\n              Finished\n            </Typography>\n          ) : null}\n\n          {props.readAgain ? (\n            <Typography variant=\"body1\" className={style.finished} onClick={() => updateFinish(props.value)}>\n              Read Again\n            </Typography>\n          ) : null}\n\n          {props.addToLibrary ? (\n            <Button\n              style={linkStyle}\n              className={style.addButton}\n              onMouseEnter={() => handleMouseEnter}\n              onMouseLeave={() => handleMouseLeave}\n              onClick={() => addToCurrentlyReading}\n            >\n              <IconTypography\n                iconSrc={<Add style={iconStyle} />}\n                variant=\"body1\"\n                title=\"Add to library\"\n              />\n            </Button>\n          ) : null}\n        </RootContainer>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}