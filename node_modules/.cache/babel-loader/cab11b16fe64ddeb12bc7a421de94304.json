{"ast":null,"code":"var _jsxFileName = \"/home/vannsn/Documents/Blinkist-Application-master/src/components/organisms/SearchBarFunction/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { makeStyles, ThemeProvider } from \"@mui/styles\";\nimport { Box } from \"@mui/material\";\nimport theme from '../../theme/theme';\nimport Search from \"../../../images/search.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  inputBar: {\n    fontSize: \"16px\",\n    border: \"none\",\n    width: 180,\n    height: 24,\n    fontFamily: 'Cera Pro',\n    marginLeft: \"32px\",\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  },\n  boxElement: {\n    width: 598,\n    height: 28,\n    backgroundColor: \"\",\n    borderBottom: \"1.5px solid #BAC9CF\",\n    display: \"flex\",\n    marginLeft: \"182px\",\n    flexDirection: \"row\"\n  },\n  imageDiv: {\n    marginLeft: \"2.96px\",\n    marginTop: \"2.96px\"\n  },\n  imageProps: {\n    width: \"18.39px\",\n    height: \"18.39px\"\n  }\n});\nexport default function Sizes(_ref) {\n  _s();\n\n  let {\n    setTitle\n  } = _ref;\n  const classes = useStyles(); //const [filter,setFilter]= React.useState('');\n\n  const searchText = event => {\n    setTitle(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.boxElement,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageDiv,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Search,\n          alt: \"img\",\n          className: classes.imageProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        className: classes.inputBar,\n        onChange: e => searchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sizes, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Sizes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sizes\");","map":{"version":3,"sources":["/home/vannsn/Documents/Blinkist-Application-master/src/components/organisms/SearchBarFunction/index.tsx"],"names":["React","makeStyles","ThemeProvider","Box","theme","Search","useStyles","inputBar","fontSize","border","width","height","fontFamily","marginLeft","outline","boxElement","backgroundColor","borderBottom","display","flexDirection","imageDiv","marginTop","imageProps","Sizes","setTitle","classes","searchText","event","e","target","value"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,aAA1C;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AAC3BM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,QAAQ,EAAE,MADL;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,KAAK,EAAE,GAHE;AAITC,IAAAA,MAAM,EAAE,EAJC;AAKTC,IAAAA,UAAU,EAAE,UALH;AAMTC,IAAAA,UAAU,EAAE,MANH;AAOT,eAAW;AACTC,MAAAA,OAAO,EAAE;AADA;AAPF,GADkB;AAY7BC,EAAAA,UAAU,EAAE;AACVL,IAAAA,KAAK,EAAE,GADG;AAEVC,IAAAA,MAAM,EAAE,EAFE;AAGVK,IAAAA,eAAe,EAAE,EAHP;AAIVC,IAAAA,YAAY,EAAE,qBAJJ;AAKVC,IAAAA,OAAO,EAAE,MALC;AAMVL,IAAAA,UAAU,EAAE,OANF;AAQVM,IAAAA,aAAa,EAAE;AARL,GAZiB;AAsB7BC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,UAAU,EAAE,QADJ;AAERQ,IAAAA,SAAS,EAAE;AAFH,GAtBmB;AA0B7BC,EAAAA,UAAU,EAAE;AACVZ,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,MAAM,EAAE;AAFE;AA1BiB,CAAD,CAA5B;AAgCA,eAAe,SAASY,KAAT,OAA0C;AAAA;;AAAA,MAA3B;AAACC,IAAAA;AAAD,GAA2B;AACvD,QAAMC,OAAO,GAAGnB,SAAS,EAAzB,CADuD,CAEvD;;AACA,QAAMoB,UAAU,GAAIC,KAAD,IAAa;AAC9BH,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEvB,KAAtB;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEqB,OAAO,CAACV,UAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEU,OAAO,CAACL,QAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEf,MAAV;AAAkB,UAAA,GAAG,EAAC,KAAtB;AAA4B,UAAA,SAAS,EAAEoB,OAAO,CAACH;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIF;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,WAAW,EAAC,2BAFZ;AAGA,QAAA,SAAS,EAAEG,OAAO,CAAClB,QAHnB;AAIA,QAAA,QAAQ,EAAGqB,CAAD,IAASF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtBuBP,K;UACNjB,S;;;KADMiB,K","sourcesContent":["import * as React from 'react';\nimport { makeStyles, ThemeProvider } from \"@mui/styles\";\nimport { Box } from \"@mui/material\";\nimport theme from '../../theme/theme';\n \nimport Search from \"../../../images/search.svg\";\n\nconst useStyles = makeStyles({\n  inputBar:{\n      fontSize: \"16px\",\n  border: \"none\",\n  width: 180,\n  height: 24,\n  fontFamily: 'Cera Pro',\n  marginLeft: \"32px\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n},\nboxElement: {\n  width: 598,\n  height: 28,\n  backgroundColor: \"\",\n  borderBottom: \"1.5px solid #BAC9CF\",\n  display: \"flex\",\n  marginLeft: \"182px\",\n  \n  flexDirection: \"row\",\n},\nimageDiv: {\n  marginLeft: \"2.96px\",\n  marginTop: \"2.96px\",\n},\nimageProps: {\n  width: \"18.39px\",\n  height: \"18.39px\",\n},\n\n});\nexport default function Sizes({setTitle}:{setTitle:any}) {\n  const classes = useStyles();\n  //const [filter,setFilter]= React.useState('');\n  const searchText = (event:any)=>{\n    setTitle(event)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n        <Box className={classes.boxElement}>\n          <div className={classes.imageDiv}>\n            <img src={Search} alt=\"img\" className={classes.imageProps} />\n          </div>\n      <input\n      type=\"text\"\n      placeholder=\"Search by title or author\"\n      className={classes.inputBar}\n      onChange={(e:any)=>searchText(e.target.value)}\n      />\n    </Box>\n   </ThemeProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}